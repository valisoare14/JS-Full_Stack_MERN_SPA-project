{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Materii ASE\\\\Lucrare de licenta\\\\SoftwareProduct\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function fetchData() {\n  try {\n    const response = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin%2Cethereum%2Cbinancecoin%2Csolana%2Cripple%2Ccardano%2Cavalanche-2%2Cchainlink%2Cdogecoin%2Ctron%2Cpolkadot%2Cmatic-network%2Cinternet-computer%2Cuniswap%2Cstacks&order=market_cap_desc&per_page=100&page=1&sparkline=false&locale=en&precision=2');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetchData().then(data => setData(data)).catch(err => console.error(err));\n  }, []); //se executa doar cand se monteaza componenta(prima data)\n\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data && data.map(element => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [element.name, \" \", element.current_price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(App, \"bCNkungiV3bwEdCRYbJX3S98MTg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchData","response","fetch","data","json","error","console","App","_s","setData","then","catch","err","log","children","map","element","name","current_price","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Materii ASE/Lucrare de licenta/SoftwareProduct/my-react-app/src/App.js"],"sourcesContent":["import { useEffect ,useState} from \"react\";\n\nasync function fetchData(){\n  try {\n    const response = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin%2Cethereum%2Cbinancecoin%2Csolana%2Cripple%2Ccardano%2Cavalanche-2%2Cchainlink%2Cdogecoin%2Ctron%2Cpolkadot%2Cmatic-network%2Cinternet-computer%2Cuniswap%2Cstacks&order=market_cap_desc&per_page=100&page=1&sparkline=false&locale=en&precision=2');\n    const data = await response.json(); \n    return data\n  } catch (error) {\n    console.error(error)\n  }\n    \n}\n\nfunction App() {\n  const [data,setData]=useState(null)\n\n  useEffect(()=>{\n    fetchData().then(data=>setData(data)).catch(err=>console.error(err))\n  },[])//se executa doar cand se monteaza componenta(prima data)\n\n  useEffect(()=>{\n    console.log(data)\n  },[data])\n  return (\n    <>\n    {data&& data.map(element => {\n      <div>{element.name} {element.current_price}</div>\n    })}\n    </>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,eAAeC,SAASA,CAAA,EAAE;EACxB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+TAA+T,CAAC;IAC7V,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AAEF;AAEA,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACL,IAAI,EAACM,OAAO,CAAC,GAACd,QAAQ,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAI;IACZM,SAAS,CAAC,CAAC,CAACU,IAAI,CAACP,IAAI,IAAEM,OAAO,CAACN,IAAI,CAAC,CAAC,CAACQ,KAAK,CAACC,GAAG,IAAEN,OAAO,CAACD,KAAK,CAACO,GAAG,CAAC,CAAC;EACtE,CAAC,EAAC,EAAE,CAAC;;EAELlB,SAAS,CAAC,MAAI;IACZY,OAAO,CAACO,GAAG,CAACV,IAAI,CAAC;EACnB,CAAC,EAAC,CAACA,IAAI,CAAC,CAAC;EACT,oBACEN,OAAA,CAAAE,SAAA;IAAAe,QAAA,EACCX,IAAI,IAAGA,IAAI,CAACY,GAAG,CAACC,OAAO,IAAI;MAC1B,aAAAnB,OAAA;QAAAiB,QAAA,GAAME,OAAO,CAACC,IAAI,EAAC,GAAC,EAACD,OAAO,CAACE,aAAa;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACnD,CAAC;EAAC,gBACA,CAAC;AAEP;AAACd,EAAA,CAjBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}