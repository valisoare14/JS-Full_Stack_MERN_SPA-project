{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Materii ASE\\\\Lucrare de licenta\\\\SoftwareProduct\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function fetchData() {\n  try {\n    const response = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin%2Cethereum&order=market_cap_desc&per_page=100&page=1&sparkline=false&locale=en&precision=2');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function fetchMessage() {\n  try {\n    const response = await fetch('http://localhost:5000/');\n    const msg = await response.text;\n    return msg;\n  } catch (error) {\n    console.error(err);\n  }\n}\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    fetchData().then(data => setData(data)).catch(err => console.error(err));\n    fetchMessage().then(data => setMessage(data)).catch(err => console.error(err));\n  }, []); //se executa doar cand se monteaza componenta(prima data)\n\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n  useEffect(() => {\n    console.log(message);\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [data && data.map(element => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [element.name, \" \", element.current_price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: message && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: message\n      }, void 0, false)\n    }, void 0, false)]\n  }, void 0, true);\n}\n_s(App, \"khhV2/zupyfqD4FnycOlL7iqYOk=\");\n_c = App;\nexport default App;\n\n//const response = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin%2Cethereum%2Cbinancecoin%2Csolana%2Cripple%2Ccardano%2Cavalanche-2%2Cchainlink%2Cdogecoin%2Ctron%2Cpolkadot%2Cmatic-network%2Cinternet-computer%2Cuniswap%2Cstacks&order=market_cap_desc&per_page=100&page=1&sparkline=false&locale=en&precision=2');\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchData","response","fetch","data","json","error","console","fetchMessage","msg","text","err","App","_s","setData","message","setMessage","then","catch","log","children","map","element","name","current_price","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Materii ASE/Lucrare de licenta/SoftwareProduct/my-react-app/src/App.js"],"sourcesContent":["import { useEffect ,useState} from \"react\";\n\nasync function fetchData(){\n  try {\n    const response = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin%2Cethereum&order=market_cap_desc&per_page=100&page=1&sparkline=false&locale=en&precision=2');\n    const data = await response.json(); \n    return data\n  } catch (error) {\n    console.error(error)\n  }\n}\nasync function fetchMessage(){\n  try {\n    const response=await fetch('http://localhost:5000/')\n    const msg=await response.text\n  return msg  \n  } catch (error) {\n    console.error(err)\n  }\n}\n\nfunction App() {\n  const [data,setData]=useState(null)\n  const[message,setMessage]=useState('')\n  useEffect(()=>{\n    fetchData().then(data=>setData(data)).catch(err=>console.error(err))\n    fetchMessage().then(data=>setMessage(data)).catch(err=>console.error(err))\n  },[])//se executa doar cand se monteaza componenta(prima data)\n\n  useEffect(()=>{\n    console.log(data)\n  },[data])\n  useEffect(()=>{\n    console.log(message)\n  },[message])\n  return (\n    <>\n    {data&& data.map(element => {\n      <div>{element.name} {element.current_price}</div>\n    })}\n      <>\n        {message && <>{message}</>}  \n      </>\n    </>\n  );\n}\n\nexport default App;\n\n//const response = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin%2Cethereum%2Cbinancecoin%2Csolana%2Cripple%2Ccardano%2Cavalanche-2%2Cchainlink%2Cdogecoin%2Ctron%2Cpolkadot%2Cmatic-network%2Cinternet-computer%2Cuniswap%2Cstacks&order=market_cap_desc&per_page=100&page=1&sparkline=false&locale=en&precision=2');"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,eAAeC,SAASA,CAAA,EAAE;EACxB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uKAAuK,CAAC;IACrM,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF;AACA,eAAeE,YAAYA,CAAA,EAAE;EAC3B,IAAI;IACF,MAAMN,QAAQ,GAAC,MAAMC,KAAK,CAAC,wBAAwB,CAAC;IACpD,MAAMM,GAAG,GAAC,MAAMP,QAAQ,CAACQ,IAAI;IAC/B,OAAOD,GAAG;EACV,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACK,GAAG,CAAC;EACpB;AACF;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACT,IAAI,EAACU,OAAO,CAAC,GAAClB,QAAQ,CAAC,IAAI,CAAC;EACnC,MAAK,CAACmB,OAAO,EAACC,UAAU,CAAC,GAACpB,QAAQ,CAAC,EAAE,CAAC;EACtCD,SAAS,CAAC,MAAI;IACZM,SAAS,CAAC,CAAC,CAACgB,IAAI,CAACb,IAAI,IAAEU,OAAO,CAACV,IAAI,CAAC,CAAC,CAACc,KAAK,CAACP,GAAG,IAAEJ,OAAO,CAACD,KAAK,CAACK,GAAG,CAAC,CAAC;IACpEH,YAAY,CAAC,CAAC,CAACS,IAAI,CAACb,IAAI,IAAEY,UAAU,CAACZ,IAAI,CAAC,CAAC,CAACc,KAAK,CAACP,GAAG,IAAEJ,OAAO,CAACD,KAAK,CAACK,GAAG,CAAC,CAAC;EAC5E,CAAC,EAAC,EAAE,CAAC;;EAELhB,SAAS,CAAC,MAAI;IACZY,OAAO,CAACY,GAAG,CAACf,IAAI,CAAC;EACnB,CAAC,EAAC,CAACA,IAAI,CAAC,CAAC;EACTT,SAAS,CAAC,MAAI;IACZY,OAAO,CAACY,GAAG,CAACJ,OAAO,CAAC;EACtB,CAAC,EAAC,CAACA,OAAO,CAAC,CAAC;EACZ,oBACEjB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,GACChB,IAAI,IAAGA,IAAI,CAACiB,GAAG,CAACC,OAAO,IAAI;MAC1B,aAAAxB,OAAA;QAAAsB,QAAA,GAAME,OAAO,CAACC,IAAI,EAAC,GAAC,EAACD,OAAO,CAACE,aAAa;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACnD,CAAC,CAAC,eACA9B,OAAA,CAAAE,SAAA;MAAAoB,QAAA,EACGL,OAAO,iBAAIjB,OAAA,CAAAE,SAAA;QAAAoB,QAAA,EAAGL;MAAO,gBAAG;IAAC,gBAC1B,CAAC;EAAA,eACH,CAAC;AAEP;AAACF,EAAA,CAxBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA0BZ,eAAeA,GAAG;;AAElB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}