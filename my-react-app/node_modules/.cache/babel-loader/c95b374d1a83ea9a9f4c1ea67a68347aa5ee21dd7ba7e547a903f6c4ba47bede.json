{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function fetchData() {\n  try {\n    const response = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd&precision=2');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetchData().then(data => setData(data)).catch(err => console.error(err));\n  }, []); //se executa doar cand se monteaza componenta(prima data)\n\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [Object.keys(data)[0], \" \", data.bitcoin.usd]\n  }, void 0, true);\n}\n_s(App, \"bCNkungiV3bwEdCRYbJX3S98MTg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","fetchData","response","fetch","data","json","error","console","App","_s","setData","then","catch","err","log","children","Object","keys","bitcoin","usd","_c","$RefreshReg$"],"sources":["C:/Users/User/Materii ASE/Lucrare de licenta/SoftwareProduct/my-react-app/src/App.js"],"sourcesContent":["import { useEffect ,useState} from \"react\";\n\nasync function fetchData(){\n  try {\n    const response = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd&precision=2');\n    const data = await response.json(); \n    return data\n  } catch (error) {\n    console.error(error)\n  }\n    \n}\n\nfunction App() {\n  const [data,setData]=useState(null)\n\n  useEffect(()=>{\n    fetchData().then(data=>setData(data)).catch(err=>console.error(err))\n  },[])//se executa doar cand se monteaza componenta(prima data)\n\n  useEffect(()=>{\n    console.log(data)\n  },[data])\n  return (\n    <>\n    {Object.keys(data)[0]} {data.bitcoin.usd}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAeC,SAASA,CAAA,EAAE;EACxB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yFAAyF,CAAC;IACvH,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AAEF;AAEA,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACL,IAAI,EAACM,OAAO,CAAC,GAACd,QAAQ,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAI;IACZM,SAAS,CAAC,CAAC,CAACU,IAAI,CAACP,IAAI,IAAEM,OAAO,CAACN,IAAI,CAAC,CAAC,CAACQ,KAAK,CAACC,GAAG,IAAEN,OAAO,CAACD,KAAK,CAACO,GAAG,CAAC,CAAC;EACtE,CAAC,EAAC,EAAE,CAAC;;EAELlB,SAAS,CAAC,MAAI;IACZY,OAAO,CAACO,GAAG,CAACV,IAAI,CAAC;EACnB,CAAC,EAAC,CAACA,IAAI,CAAC,CAAC;EACT,oBACEJ,OAAA,CAAAF,SAAA;IAAAiB,QAAA,GACCC,MAAM,CAACC,IAAI,CAACb,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,GAAC,EAACA,IAAI,CAACc,OAAO,CAACC,GAAG;EAAA,eACtC,CAAC;AAEP;AAACV,EAAA,CAfQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAiBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}