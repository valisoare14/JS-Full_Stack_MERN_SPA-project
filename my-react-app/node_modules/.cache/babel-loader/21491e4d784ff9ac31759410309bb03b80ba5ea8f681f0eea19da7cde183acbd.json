{"ast":null,"code":"async function getNotifications(token) {\n  try {\n    if (token) {\n      const response = await fetch(`${process.env.REACT_APP_LOCAL_SERVER}notifications`, {\n        method: \"GET\",\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const result = await response.json();\n      if (response.status !== 200) {\n        throw new Error(result.message);\n      }\n      return result.data;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport { getNotifications };","map":{"version":3,"names":["getNotifications","token","response","fetch","process","env","REACT_APP_LOCAL_SERVER","method","headers","result","json","status","Error","message","data","error","console"],"sources":["C:/Users/User/Materii ASE/Lucrare de licenta/SoftwareProduct/my-react-app/src/api_s/getNotifications.js"],"sourcesContent":["async function getNotifications(token){\r\n    try {\r\n        if(token) {\r\n            const response = await fetch(`${process.env.REACT_APP_LOCAL_SERVER}notifications`,{\r\n                method:\"GET\",\r\n                headers:{\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            const result = await response.json()\r\n    \r\n            if(response.status !== 200){\r\n                throw new Error(result.message)\r\n            }\r\n    \r\n            return result.data\r\n        }\r\n    } catch (error) {\r\n        console.error(error)\r\n    }\r\n}\r\n\r\nexport {getNotifications}"],"mappings":"AAAA,eAAeA,gBAAgBA,CAACC,KAAK,EAAC;EAClC,IAAI;IACA,IAAGA,KAAK,EAAE;MACN,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,eAAc,EAAC;QAC9EC,MAAM,EAAC,KAAK;QACZC,OAAO,EAAC;UACJ,eAAe,EAAG,UAASP,KAAM;QACrC;MACJ,CAAC,CAAC;MACF,MAAMQ,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAEpC,IAAGR,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAC;QACvB,MAAM,IAAIC,KAAK,CAACH,MAAM,CAACI,OAAO,CAAC;MACnC;MAEA,OAAOJ,MAAM,CAACK,IAAI;IACtB;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ;AAEA,SAAQf,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}