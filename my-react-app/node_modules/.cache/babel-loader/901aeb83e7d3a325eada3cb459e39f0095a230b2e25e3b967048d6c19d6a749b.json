{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { setToken } from \"../store/slices/slice\";\nimport { useDispatch } from \"react-redux\";\nfunction useCheckToken() {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    async function checkToken() {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          const response = await fetch(`${process.env.REACT_APP_LOCAL_SERVER}authentification/verifytoken`, {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              token\n            })\n          });\n          const result = await response.json();\n          if (response.status != 200) {\n            localStorage.removeItem('token');\n            throw new Error(result.message);\n          }\n          dispatch(setToken(token));\n        }\n      } catch (error) {\n        dispatch(setToken(null));\n        console.error(error.message);\n      }\n    }\n    checkToken().then().catch();\n  }, []);\n}\n_s(useCheckToken, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\nexport { useCheckToken };","map":{"version":3,"names":["useEffect","setToken","useDispatch","useCheckToken","_s","dispatch","checkToken","token","localStorage","getItem","response","fetch","process","env","REACT_APP_LOCAL_SERVER","method","headers","body","JSON","stringify","result","json","status","removeItem","Error","message","error","console","then","catch"],"sources":["C:/Users/User/Materii ASE/Lucrare de licenta/SoftwareProduct/my-react-app/src/custom_hooks/useCheckToken.js"],"sourcesContent":["import { useEffect } from \"react\"\r\nimport { setToken } from \"../store/slices/slice\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nfunction useCheckToken(){\r\n    const dispatch=useDispatch()\r\n    useEffect(()=>{\r\n        async function checkToken(){\r\n            try {\r\n                const token=localStorage.getItem('token')\r\n        \r\n                if(token){\r\n                    const response = await fetch(`${process.env.REACT_APP_LOCAL_SERVER}authentification/verifytoken`,{\r\n                        method:\"POST\",\r\n                        headers:{\r\n                            'Content-Type':'application/json'\r\n                        },\r\n                        body:JSON.stringify({token})\r\n                    })\r\n                    const result=await response.json()\r\n                    if(response.status!=200){\r\n                        localStorage.removeItem('token')\r\n                        throw new Error(result.message)\r\n                    }\r\n                    dispatch(setToken(token))  \r\n                }\r\n            } catch (error) {\r\n                dispatch(setToken(null))\r\n                console.error(error.message)\r\n            }\r\n        }\r\n        checkToken().then().catch()\r\n    },[])\r\n}\r\n\r\nexport {useCheckToken}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,aAAaA,CAAA,EAAE;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAACH,WAAW,CAAC,CAAC;EAC5BF,SAAS,CAAC,MAAI;IACV,eAAeM,UAAUA,CAAA,EAAE;MACvB,IAAI;QACA,MAAMC,KAAK,GAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAEzC,IAAGF,KAAK,EAAC;UACL,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,8BAA6B,EAAC;YAC7FC,MAAM,EAAC,MAAM;YACbC,OAAO,EAAC;cACJ,cAAc,EAAC;YACnB,CAAC;YACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;cAACZ;YAAK,CAAC;UAC/B,CAAC,CAAC;UACF,MAAMa,MAAM,GAAC,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;UAClC,IAAGX,QAAQ,CAACY,MAAM,IAAE,GAAG,EAAC;YACpBd,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;YAChC,MAAM,IAAIC,KAAK,CAACJ,MAAM,CAACK,OAAO,CAAC;UACnC;UACApB,QAAQ,CAACJ,QAAQ,CAACM,KAAK,CAAC,CAAC;QAC7B;MACJ,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACZrB,QAAQ,CAACJ,QAAQ,CAAC,IAAI,CAAC,CAAC;QACxB0B,OAAO,CAACD,KAAK,CAACA,KAAK,CAACD,OAAO,CAAC;MAChC;IACJ;IACAnB,UAAU,CAAC,CAAC,CAACsB,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EAC/B,CAAC,EAAC,EAAE,CAAC;AACT;AAACzB,EAAA,CA7BQD,aAAa;EAAA,QACHD,WAAW;AAAA;AA8B9B,SAAQC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}